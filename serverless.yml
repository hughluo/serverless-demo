service: todo-serverless

custom:
  tableName: ${self:service}-table 

provider:
  name: aws
  region: eu-central-1
  runtime: python3.8
  environment:
    TODO_TABLE: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }

functions:
  create_todo:
    handler: todos.create
    events:
      - httpApi:
            method: POST
            path: /todos

  get_all_todos:
    handler: todos.get_all
    events:
      - httpApi:
            method: GET
            path: /todos

resources:
  Resources:
    UsersDynamoDBTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: todoId
            AttributeType: S
        KeySchema:
          -
            AttributeName: todoId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
